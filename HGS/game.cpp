//=============================================================================
//
// game.cpp
// Author : koduna hirohito
//
//=============================================================================

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "manager.h"
#include "game.h"
#include "input.h"
#include "texture.h"
#include "ui.h"

//*****************************************************************************
// グローバル宣言
//*****************************************************************************
PUSHSTATE g_PushState;

//*****************************************************************************
// 初期化処理
//*****************************************************************************
void InitGame()
{
	//各数値初期化
	g_PushState.NowTargetButton == TARGETBUTTON_NONE;
	g_PushState.nPushCount = 0;
	g_PushState.nPushLimitTime = 0;
}
//*****************************************************************************
// 終了処理
//*****************************************************************************
void UninitGame()
{

}
//*****************************************************************************
// 更新処理
//*****************************************************************************
void UpdateGame()
{

}
//*****************************************************************************
// 描画処理
//*****************************************************************************
void DrawGame()
{

}

//*****************************************************************************
// コンストラクタ
//*****************************************************************************
CGame::CGame()
{
}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CGame::~CGame()
{
}

//*****************************************************************************
// 初期化
//*****************************************************************************
HRESULT CGame::Init()
{
	return S_OK;
}

//*****************************************************************************
// 終了処理
//*****************************************************************************
void CGame::Uninit()
{
}

//*****************************************************************************
// 更新処理
//*****************************************************************************
void CGame::Update()
{

	//GetInput
	CInput *pInput = CInput::GetKey();

	//EndGame
	if (pInput->Trigger(KEY_DECISION))
	{
		CManager * pManager = GetManager();
		pManager->NextMode(TYPE_RESULT);
	}
}

//*****************************************************************************
// 描画処理
//*****************************************************************************
void CGame::Draw()
{
}
