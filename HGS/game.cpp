//=============================================================================
//
// game.cpp
// Author : koduna hirohito
//
//=============================================================================

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "manager.h"
#include "game.h"
#include "input.h"
#include "texture.h"
#include "ui.h"
#include "domino.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define DOMINO_SPACE			(50)					//ドミノ同士の間隔
#define SCROLL_SPEED			(8.0f)					//スクロールスピード

//*****************************************************************************
// グローバル変数宣言
//*****************************************************************************
D3DXVECTOR3 g_posWorld;
GAMESTATE g_gameState;

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
void ManageScroll(void);

//*****************************************************************************
// コンストラクタ
//*****************************************************************************
CGame::CGame()
{
}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CGame::~CGame()
{
}

//*****************************************************************************
// 初期化
//*****************************************************************************
HRESULT CGame::Init()
{
	//変数初期化
	g_posWorld = {0.0f,0.0f,0.0f};
	g_gameState = GAMESTATE_NONE;

	//ドミノ初期化
	InitDomino();

	return S_OK;
}

//*****************************************************************************
// 終了処理
//*****************************************************************************
void CGame::Uninit()
{
	//ドミノ終了
	UninitDomino();

}

//*****************************************************************************
// 更新処理
//*****************************************************************************
void CGame::Update()
{
	//GetInput
	CInput *pInput = CInput::GetKey();

	//ドミノ情報取得
	Domino *pDomino = GetDomino();

	//ドミノ更新
	UpdateDomino();

	if (pInput->Trigger(KEY_SHOT))
	{//ドミノ倒す
		g_gameState = GAMESTATE_DOWN;
	}

	if (pInput->Press(KEY_UP))
	{//ドミノ召喚
		SetDomino(D3DXVECTOR3(SCREEN_WIDTH * 0.5f + GetDominoNum() * DOMINO_SPACE, SCREEN_HEIGHT * 0.5f, 0.0f));
	}

	if (pInput->Press(KEY_LEFT))
	{//原点操作
		g_posWorld.x -= SCROLL_SPEED;
	}
	else if (pInput->Press(KEY_RIGHT))
	{//原点操作
		g_posWorld.x += SCROLL_SPEED;
	}

	//スクロールの管理
	ManageScroll();

	//EndGame
	if (pInput->Trigger(KEY_DECISION))
	{
		CManager * pManager = GetManager();
		pManager->NextMode(TYPE_RESULT);
	}
}

//*****************************************************************************
// スクロール管理
//*****************************************************************************
void ManageScroll(void)
{
	switch (g_gameState)
	{
	case GAMESTATE_DOWN:

		g_posWorld.x -= SCROLL_SPEED;

		break;
	default:
		break;
	}
}

//*****************************************************************************
// 描画処理
//*****************************************************************************
void CGame::Draw()
{
	//ドミノ描画
	DrawDomino();
}

//*****************************************************************************
// 世界の原点位置
//*****************************************************************************
D3DXVECTOR3 *GetPosWorld(void)
{
	return &g_posWorld;
}

//*****************************************************************************
// ゲーム状態取得
//*****************************************************************************
GAMESTATE GetGameState(void)
{
	return g_gameState;
}

//*****************************************************************************
// ゲーム状態設定処理
//*****************************************************************************
void SetGameState(GAMESTATE state)
{
	g_gameState = state;
}